pipeline {
    agent any

    environment {
        IMAGE_NAME = 'flask-ec2-app'
    }

    stages {
        stage('Clone Repo') {
            steps {
                git 'https://github.com/Rishikesh-devops/flask-ec2-app.git'
            }
        }

        stage('Build Docker Image') {
            steps {
                sh 'docker build -t $IMAGE_NAME .'
            }
        }

        stage('Stop Existing Container') {
            steps {
                script {
                    def containerId = sh(script: "docker ps -q --filter ancestor=$IMAGE_NAME", returnStdout: true).trim()
                    if (containerId) {
                        sh "docker stop $containerId"
                        sh "docker rm $containerId"
                    }
                }
            }
        }

        stage('Run Docker Container') {
            steps {
                sh 'docker run -d -p 5000:5000 --name flask-container $IMAGE_NAME'
            }
        }
    }
}
